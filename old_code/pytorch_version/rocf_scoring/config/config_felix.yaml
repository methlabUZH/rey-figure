# use new or old preprocessing
NEW_DATA: True

# use preprocessing augmentation
DATA_AUGMENTATION: False

# label format: 'one-per-item' (19-dimensional), 'three-per-item' (55-dimensiona), or 'one' (only complete score)
LABEL_FORMAT: one-per-item

# show debug prints
DEBUG: True

# redo loading and preprocessing of labels from disk
REDO_PREPROCESSING_LABELS: True

# redo loading and preprocessing of images from disk
REDO_PREPROCESSING_IMAGES: True

# redo loading and preprocessing
REDO_PREPROCESSING: True

# True for Regressor, False for Classifier
REGRESSOR_MODE: False

# load only a few images for preprocessing, faster to test
LOAD_ONLY_FEW: True

# how many images should be loaded when LOAD_ONLY_FEW
NUMBER_LOAD_ONLY_FEW: 100

# use binning: 'none' to use original scores, 'discrete' to use fixed integer binning, 'continuous' for continuous binning
BINNING: 'discrete'

# validate on binning, even if binning wasn't used for training
VAL_BINNING: False

# specify number of convolutional layers [2..4]
CONV_LAYERS: 2

# dropout
DROPOUT: 0.5

# classification encoding: 'one-hot' (0,0,1,0,0), 'weighted' (0.05,0.1,0.7,0.1,0.05), 'ordinal' (1, 1, 1, 0, 0)
CLASSIFICATION_ENCODER: 'one-hot'

# test can be False (normal cross-val on train/val) or True (train on all training preprocessing, test on test preprocessing)
TEST: False

# droput for monte carlo dropout after every layer CNN layer to approximate uncertainty
DROPOUT_MC: True

# dropout rate DROPOUT_MC
DROPOUT_MC_RATE: 0.1

# checkpoint of training
RESUME_CHECKPOINT: False

# Path to checkpoint
PATH_CHECKPOINT: "/Users/felixasanger/Desktop/pytorch_rey-figure/rocf_scoring/trained_models/20201107_12-18-13_felix_test/checkpoints/epoch_5/checkpoint.tar"

# Save model checkpoints every EVERY_N_EPOCHS
EVERY_N_EPOCHS: 5

# Save model checkpoints:
SAVE_MODEL_CHECKPOINTS: False

